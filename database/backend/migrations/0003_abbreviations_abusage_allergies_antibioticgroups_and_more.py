# Generated by Django 5.1.4 on 2025-01-27 07:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0002_alter_todo_todo'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abbreviations',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'abbreviations',
            },
        ),
        migrations.CreateModel(
            name='AbUsage',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('use', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'ab_usage',
            },
        ),
        migrations.CreateModel(
            name='Allergies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'allergies',
            },
        ),
        migrations.CreateModel(
            name='AntibioticGroups',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'db_table': 'antibiotic_groups',
            },
        ),
        migrations.CreateModel(
            name='Antibiotics',
            fields=[
                ('ab', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('cid', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='antibiotics', to='backend.antibioticgroups')),
            ],
            options={
                'db_table': 'antibiotics',
            },
        ),
        migrations.CreateModel(
            name='Compliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.abusage')),
            ],
            options={
                'db_table': 'compliance',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Diagnoses',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('diagnosis', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'diagnoses',
            },
        ),
        migrations.CreateModel(
            name='DialCodes',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('dial', models.PositiveSmallIntegerField()),
                ('country_code', models.ForeignKey(db_column='country_code', on_delete=django.db.models.deletion.CASCADE, related_name='dial_codes', to='backend.countries')),
            ],
            options={
                'db_table': 'dial_codes',
                'unique_together': {('dial', 'country_code')},
            },
        ),
        migrations.CreateModel(
            name='Dosage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=17, null=True)),
                ('dose', models.CharField(max_length=20)),
                ('dose_times', models.PositiveIntegerField(blank=True, null=True)),
                ('administration', models.CharField(blank=True, max_length=4, null=True)),
                ('ab', models.ForeignKey(db_column='ab', on_delete=django.db.models.deletion.CASCADE, related_name='dosage', to='backend.antibiotics')),
            ],
            options={
                'db_table': 'dosage',
                'unique_together': {('ab', 'type', 'dose', 'dose_times', 'administration')},
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('birth_date', models.DateField()),
                ('deleted', models.PositiveIntegerField(blank=True, null=True)),
                ('birth_country_code', models.ForeignKey(db_column='birth_country_code', on_delete=django.db.models.deletion.PROTECT, related_name='patients_birth_country_code_set', to='backend.countries')),
                ('dial_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.dialcodes')),
                ('resident_country_code', models.ForeignKey(db_column='resident_country_code', on_delete=django.db.models.deletion.PROTECT, to='backend.countries')),
            ],
            options={
                'db_table': 'patients',
            },
        ),
        migrations.CreateModel(
            name='PrescriptionDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.diagnoses')),
            ],
            options={
                'db_table': 'prescription_diagnosis',
            },
        ),
        migrations.CreateModel(
            name='Prescriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_date', models.DateField()),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.PositiveIntegerField(blank=True, null=True)),
                ('dose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.dosage')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='backend.patients')),
            ],
            options={
                'db_table': 'prescriptions',
            },
        ),
        migrations.CreateModel(
            name='Synonyms',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('synonym', models.CharField(max_length=32)),
                ('ab', models.ForeignKey(db_column='ab', on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='backend.antibiotics')),
            ],
            options={
                'db_table': 'synonyms',
                'unique_together': {('ab', 'synonym')},
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField()),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=5000, null=True)),
                ('deleted', models.PositiveIntegerField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='backend.patients')),
            ],
            options={
                'db_table': 'visits',
            },
        ),
        migrations.DeleteModel(
            name='Todo',
        ),
        migrations.AddField(
            model_name='allergies',
            name='ab',
            field=models.ForeignKey(db_column='ab', on_delete=django.db.models.deletion.CASCADE, to='backend.antibiotics'),
        ),
        migrations.AddField(
            model_name='abbreviations',
            name='ab',
            field=models.ForeignKey(db_column='ab', on_delete=django.db.models.deletion.CASCADE, related_name='abbreviations', to='backend.antibiotics'),
        ),
        migrations.AddField(
            model_name='allergies',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='backend.patients'),
        ),
        migrations.AddField(
            model_name='prescriptiondiagnosis',
            name='prescription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.prescriptions'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='prescription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.prescriptions'),
        ),
        migrations.AlterUniqueTogether(
            name='abbreviations',
            unique_together={('ab', 'abbreviation')},
        ),
        migrations.AlterUniqueTogether(
            name='allergies',
            unique_together={('ab', 'patient')},
        ),
        migrations.AlterUniqueTogether(
            name='prescriptiondiagnosis',
            unique_together={('diagnosis', 'prescription')},
        ),
        migrations.AlterUniqueTogether(
            name='compliance',
            unique_together={('prescription', 'use')},
        ),
    ]
